"Cephalorhynchus_heavisidii", #heavisides dolphin
#"Cephalorhynchus_eutropia", #commersons dolphin (replaced species name with close relative bc does not exist in phylo)
#"Lagenorhynchus_albirostris", #peales dolphin (replaced species name with close relative bc does not exist in phylo)
"Cephalorhynchus_hectori"), #hectors dolphin
common = c("humpback",
"blue",
"fin",
"minke",
"bowhead",
"right",
"sei",
"sperm",
"killer",
#"narrow",
"rissos",
"bottlenose",
"heavisides",
#"commersons",
#"peales",
"hectors"))
#subset the original phylogeny to only include the relevant species
cetaceans <- ape::keep.tip(cetaceans, ceta_tips$scientific)
#overwrite with common name abbreviation for easy matching
cetaceans$tip.label <- ceta_tips$common[match(cetaceans$tip.label, ceta_tips$scientific)]
#format model estimates and standard errors for computing the phylogenetic signal
phylo_sig_data <- data.frame(est = c(summary(sperm_models$actual$reduced_scaled)$coef[2, 1],
summary(humpback_models$actual$reduced_scaled)$coef[2, 1],
summary(fin_models$actual$reduced_scaled)$coef[2, 1],
summary(killer_models$actual$reduced_scaled)$coef[2, 1],
summary(blue_models$actual$reduced_scaled)$coef[2, 1],
summary(minke_models$actual$reduced_scaled)$coef[2, 1],
summary(bowhead_models$actual$reduced_scaled)$coef[2, 1],
summary(right_models$actual$reduced_scaled)$coef[2, 1],
summary(narrow_models$actual$reduced_scaled)$coef[2, 1],
summary(rissos_models$actual$reduced_scaled)$coef[2, 1],
summary(bottlenose_models$actual$reduced_scaled)$coef[2, 1],
summary(heavisides_models$actual$reduced_scaled)$coef[2, 1],
summary(commersons_models$actual$reduced_scaled)$coef[2, 1],
summary(peales_models$actual$reduced_scaled)$coef[2, 1],
summary(hectors_models$actual$reduced_scaled)$coef[2, 1],
summary(sei_models$actual$reduced_scaled)$coef[2, 1]),
err = c(summary(sperm_models$actual$reduced_scaled)$coef[2, 2],
summary(humpback_models$actual$reduced_scaled)$coef[2, 2],
summary(fin_models$actual$reduced_scaled)$coef[2, 2],
summary(killer_models$actual$reduced_scaled)$coef[2, 2],
summary(blue_models$actual$reduced_scaled)$coef[2, 2],
summary(minke_models$actual$reduced_scaled)$coef[2, 2],
summary(bowhead_models$actual$reduced_scaled)$coef[2, 2],
summary(right_models$actual$reduced_scaled)$coef[2, 2],
summary(narrow_models$actual$reduced_scaled)$coef[2, 2],
summary(rissos_models$actual$reduced_scaled)$coef[2, 2],
summary(bottlenose_models$actual$reduced_scaled)$coef[2, 2],
summary(heavisides_models$actual$reduced_scaled)$coef[2, 2],
summary(commersons_models$actual$reduced_scaled)$coef[2, 2],
summary(peales_models$actual$reduced_scaled)$coef[2, 2],
summary(hectors_models$actual$reduced_scaled)$coef[2, 2],
summary(sei_models$actual$reduced_scaled)$coef[2, 2]),
species = c("sperm", "humpback", "fin", "killer", "blue", "minke", "bowhead", "right",
"narrow",
"rissos", "bottlenose", "heavisides",
"commersons", "peales",
"hectors", "sei"))
#compute and save phylogenetic signal with a p-value
phylo_signal <- phytools::phylosig(cetaceans, x = phylo_sig_data$est[match(cetaceans$tip.label, phylo_sig_data$species)], se = phylo_sig_data$err[match(cetaceans$tip.label, phylo_sig_data$species)],  method = "K", test = TRUE)
save(phylo_signal, file = "models/phylo_signal.RData")
phylo_signal
#combine data from all species to be analyzed in a single model
all_species_data <- list(sperm = sperm_data, humpback = humpback_data, fin = fin_data, killer = killer_data, blue = blue_data, minke = minke_data, bowhead = bowhead_data, right = right_data, narrow = narrow_data, rissos = rissos_data, bottlenose = bottlenose_data, heavisides = heavisides_data, commersons = commersons_data, peales = peales_data, hectors = hectors_data, sei = sei_data)
#groups: 0 for mysticetes, 1 for odontocetes; types: 0 for elements, 1 for intervals
groups <- c(1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0)
types <- c(1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0)
#check for convergence
summary(all_species_model$base)$optinfo$conv$lme4$messages
#run model
#positive interaction means that 1 has weaker ML than 0
all_species_model <- menz_compare(all_species_data, groups, types)
all_species_model
all_species_model$base
#return
save(all_species_model, file = "models/all_species_model.RData")
#create supplementary table for mysticetes with only length
myst_length_table <- do.call(rbind, list(table_output(humpback_models),
table_output(blue_models),
table_output(minke_models),
table_output(bowhead_models),
table_output(right_models),
table_output(sei_models)))
myst_length_table <- round(myst_length_table, 3)
myst_length_table <- as.data.frame(myst_length_table)
myst_length_table <- cbind("Mysticete", c("Humpback Whale", "Blue Whale", "Minke Whale", "Bowhead Whale", "Right Whale", "Sei Whale"), myst_length_table)
myst_length_table <- myst_length_table[order(myst_length_table[, 2]), ]
myst_length_table <- rbind(c("Group", "Species", "Effect", "2.5%", "97.5%"), myst_length_table)
colnames(myst_length_table) <- paste0("V", c(1:ncol(myst_length_table)))
rownames(myst_length_table) <- NULL
#create supplementary table for mysticetes with position
myst_position_table <- do.call(rbind, list(table_output(humpback_models, w_position = TRUE),
table_output(blue_models, w_position = TRUE),
table_output(minke_models, w_position = TRUE),
table_output(bowhead_models, w_position = TRUE),
table_output(right_models, w_position = TRUE),
table_output(sei_models, w_position = TRUE)))
myst_position_table <- round(myst_position_table, 3)
myst_position_table <- as.data.frame(myst_position_table)
myst_position_table <- cbind("Mysticete", c("Humpback Whale", "Blue Whale", "Minke Whale", "Bowhead Whale", "Right Whale", "Sei Whale"), myst_position_table)
myst_position_table <- myst_position_table[order(myst_position_table[, 2]), ]
myst_position_table <- rbind(c("", "", rep("Length", 3), rep("Position", 3)), c("Group", "Species", "Effect", "2.5%", "97.5%", "Effect", "2.5%", "97.5%"), myst_position_table)
colnames(myst_position_table) <- paste0("V", c(1:ncol(myst_position_table)))
rownames(myst_position_table) <- NULL
#create supplementary table for odontocetes with only length
odon_length_table <- do.call(rbind, list(table_output(hectors_models),
table_output(commersons_models),
table_output(heavisides_models),
table_output(rissos_models),
table_output(bottlenose_models),
table_output(peales_models),
table_output(killer_models),
table_output(narrow_models),
table_output(sperm_models)))
odon_length_table <- round(odon_length_table, 3)
odon_length_table <- as.data.frame(odon_length_table)
odon_length_table <- cbind("Odontocete", c("Hector's Dolphin", "Commerson's Dolphin", "Heaviside's Dolphin", "Risso's Dolphin", "Bottlenose Dolphin", "Peale's Dolphin", "Killer Whale", "Narrow-Ridged Finless Porpoise", "Sperm Whale"), odon_length_table)
odon_length_table <- odon_length_table[order(odon_length_table[, 2]), ]
#odon_length_table <- rbind(c("Group", "Species", "Effect", "2.5%", "97.5%"), odon_length_table)
colnames(odon_length_table) <- paste0("V", c(1:ncol(odon_length_table)))
rownames(odon_length_table) <- NULL
#create supplementary table for odontocetes with position
odon_position_table <- do.call(rbind, list(table_output(hectors_models, w_position = TRUE),
table_output(commersons_models, w_position = TRUE),
table_output(heavisides_models, w_position = TRUE),
table_output(rissos_models, w_position = TRUE),
table_output(bottlenose_models, w_position = TRUE),
table_output(peales_models, w_position = TRUE),
table_output(killer_models, w_position = TRUE),
table_output(narrow_models, w_position = TRUE),
table_output(sperm_models, w_position = TRUE)))
odon_position_table <- round(odon_position_table, 3)
odon_position_table <- as.data.frame(odon_position_table)
odon_position_table <- cbind("Odontocete", c("Hector's Dolphin", "Commerson's Dolphin", "Heaviside's Dolphin", "Risso's Dolphin", "Bottlenose Dolphin", "Peale's Dolphin", "Killer Whale", "Narrow-Ridged Finless Porpoise", "Sperm Whale"), odon_position_table)
odon_position_table <- odon_position_table[order(odon_position_table[, 2]), ]
#odon_position_table <- rbind(c("", "", rep("Length", 3), rep("Position", 3)), c("Group", "Species", "Effect", "2.5%", "97.5%", "Effect", "2.5%", "97.5%"), odon_position_table)
colnames(odon_position_table) <- paste0("V", c(1:ncol(odon_position_table)))
rownames(odon_position_table) <- NULL
#combine and save them
whale_length_table <- rbind(myst_length_table, odon_length_table)
whale_position_table <- rbind(myst_position_table, odon_position_table)
whale_tables <- list(length = whale_length_table, position = whale_position_table)
save(whale_tables, file = "tables/whale_tables.RData")
#load libraries and data
library(ggtree)
cetaceans <- ape::read.tree("data/phylo_lloyd_2021.tre")
#create table of mysticetes tips
myst_tips <- data.frame(scientific = c("Megaptera_novaeangliae", #humpback
"Balaenoptera_musculus", #blue
"Balaenoptera_physalus", #fin
"Balaenoptera_acutorostrata", #minke
"Balaena_mysticetus", #bowhead
"Eubalaena_japonica", #right
"Balaenoptera_borealis"), #sei whale
common = c("Humpback Whale\n(Megaptera novaeangliae)",
"Blue Whale\n(Balaenoptera musculus)",
"Fin Whale\n(Balaenoptera physalus)",
"Common Minke Whale\n(Balaenoptera acutorostrata)",
"Bowhead Whale\n(Balaena mysticetus)",
"North Pacific Right Whale\n(Eubalaena japonica)",
"Sei Whale\n(Balaenoptera borealis)"),
img = c("humpback", "blue", "fin", "minke", "bowhead", "right", "sei"))
#create table of odontocete tips
odon_tips <- data.frame(scientific = c("Physeter_macrocephalus", #sperm
"Orcinus_orca", #killer
"Neophocaena_phocaenoides", #narrow-ridged finless porpoise (replaced species name with indo-pacific finless porpoise bc does not exist in phylo)
"Grampus_griseus", #rissos dolphin
"Tursiops_truncatus", #bottlenose dolphin
"Cephalorhynchus_heavisidii", #heavisides dolphin
"Cephalorhynchus_eutropia", #commersons dolphin (replaced species name with close relative bc does not exist in phylo)
"Lagenorhynchus_albirostris", #peales dolphin (replaced species name with close relative bc does not exist in phylo)
"Cephalorhynchus_hectori"), #hectors dolphin
common = c("Sperm Whale\n(Physeter macrocephalus)",
"Killer Whale\n(Orcinus orca)",
"Narrow-Ridged Finless Porpoise\n(Phocoena phocoena)",
"Risso's Dolphin\n(Grampus griseus)",
"Bottlenose Dolphin\n(Tursiops truncatus)",
"Heaviside's Dolphin\n(Cephalorhynchus heavisidii)",
"Commerson's Dolphin\n(Cephalorhynchus commersonii)",
"Peale's Dolphin\n(Lagenorhynchus australis)",
"Hector's Dolphin\n(Cephalorhynchus hectori)"),
img = c("sperm", "killer", "narrow", "rissos", "dolphin", "heavisides", "commersons", "peales", "hectors"))
#subset the original phylogeny to only include the relevant species
mysticetes <- ape::keep.tip(cetaceans, myst_tips$scientific)
odonticetes <- ape::keep.tip(cetaceans, odon_tips$scientific)
#match up the tip labels with the image files
mysticetes$tip.label <- myst_tips$common[match(mysticetes$tip.label, myst_tips$scientific)]
mysticetes$file <- paste0("imgs/", myst_tips$img[match(mysticetes$tip.label, myst_tips$common)], ".svg")
odonticetes$tip.label <- odon_tips$common[match(odonticetes$tip.label, odon_tips$scientific)]
odonticetes$file <- paste0("imgs/", odon_tips$img[match(odonticetes$tip.label, odon_tips$common)], ".svg")
#generate colors for each species
colors <- hues::iwanthue(nrow(myst_tips)+nrow(odon_tips), hmin = 0, hmax = 360, cmin = 30, cmax = 80, lmin = 35, lmax = 80)
#set.seed(12345)
#set.seed(123)
set.seed(1234)
colors <- colors[sample(1:(nrow(myst_tips)+nrow(odon_tips)))]
#construct un-annotated phylogeny plot for mysticetes
myst_phylo_plot <- ggtree(mysticetes, branch.length = "none", layout = "roundrect")
myst_phylo_plot$data$file <- c(mysticetes$file, rep(NA, nrow(myst_phylo_plot$data) - nrow(myst_tips)))
myst_phylo_plot <- myst_phylo_plot +
geom_tiplab(aes(image = file, color = label), geom = "image", offset = 9, size = 0.06, align = TRUE) + xlim(NA, 13.5) +
geom_tiplab(aes(color = label), geom = "label", family = "Avenir", parse = FALSE, align = TRUE, size = 2.5) +
scale_color_manual(values = colors[1:nrow(myst_tips)]) + theme(legend.position = "none") + ylim(0.5, nrow(myst_tips))
#construct un-annotated phylogeny plot for odontocetes
odon_phylo_plot <- ggtree(odonticetes, branch.length = "none", layout = "roundrect")
odon_phylo_plot$data$file <- c(odonticetes$file, rep(NA, nrow(odon_phylo_plot$data) - nrow(odon_tips)))
odon_phylo_plot <- odon_phylo_plot +
geom_tiplab(aes(image = file, color = label), geom = "image", offset = 21, size = 0.05, align = TRUE) + xlim(NA, 28) +
geom_tiplab(aes(color = label), geom = "label", family = "Avenir", parse = FALSE, align = TRUE, size = 2.5) +
scale_color_manual(values = colors[(nrow(myst_tips)+1):(nrow(myst_tips)+nrow(odon_tips))]) + theme(legend.position = "none") + ylim(0.5, nrow(odon_tips))
#create plot labels for mysticetes
myst_labels <- c(label_maker(bowhead_data, intervals = TRUE),
label_maker(right_data),
label_maker(minke_data, intervals = TRUE),
label_maker(sei_data),
label_maker(blue_data),
label_maker(fin_data, intervals = TRUE),
label_maker(humpback_data))
#create plot labels for odontocetes
odon_labels <- c(label_maker(sperm_data, intervals = TRUE),
label_maker(narrow_data, intervals = TRUE),
label_maker(killer_data),
label_maker(peales_data, intervals = TRUE),
label_maker(bottlenose_data, intervals = TRUE),
label_maker(rissos_data, intervals = TRUE),
label_maker(heavisides_data, intervals = TRUE),
label_maker(commersons_data, intervals = TRUE),
label_maker(hectors_data, intervals = TRUE))
#add annotations to mysticetes
myst_phylo_plot <- myst_phylo_plot + annotate("text", label = myst_labels, x = rep(max(myst_phylo_plot$data$x), length(myst_labels)), y = (1:length(myst_labels))-0.35, hjust = 0, family = "Avenir", size = 2.2, lineheight = 0.8)
myst_phylo_plot <- myst_phylo_plot + annotate("text", label = "Baleen Whales (Mysticetes)", x = min(myst_phylo_plot$data$x)-0.65, y = myst_phylo_plot$data$y[which.min(myst_phylo_plot$data$x)], angle = 90, family = "Avenir", size = 3)
#add annotations to odontocetes
odon_phylo_plot <- odon_phylo_plot + annotate("text", label = odon_labels, x = rep(max(odon_phylo_plot$data$x), length(odon_labels)), y = (1:length(odon_labels))-0.35, hjust = 0, family = "Avenir", size = 2.2, lineheight = 0.8)
odon_phylo_plot <- odon_phylo_plot + annotate("text", label = "Toothed Whales (Odontocetes)", x = min(odon_phylo_plot$data$x)-1.4, y = odon_phylo_plot$data$y[which.min(odon_phylo_plot$data$x)], angle = 90, family = "Avenir", size = 3)
#match up the colors between phylogeny and menzerath's law plots based on the labels
color_matching <- data.frame(species = c(myst_phylo_plot$data$label[-which(is.na(myst_phylo_plot$data$label))], odon_phylo_plot$data$label[-which(is.na(odon_phylo_plot$data$label))]), color_code = colors[c(as.numeric(factor(mysticetes$tip.label)), as.numeric(factor(odonticetes$tip.label))+nrow(myst_tips))])
#create menzerath's law plots for each species
humpback_plot <- menz_plot(data = humpback_data, model = humpback_models, color = color_matching$color_code[grep("Humpback ", color_matching$species)])
fin_plot <- menz_plot(data = fin_data, model = fin_models, intervals = TRUE, color = color_matching$color_code[grep("Fin ", color_matching$species)])
blue_plot <- menz_plot(data = blue_data, model = blue_models, color = color_matching$color_code[grep("Blue ", color_matching$species)])
minke_plot <- menz_plot(data = minke_data, model = minke_models, intervals = TRUE, color = color_matching$color_code[grep("Minke ", color_matching$species)])
killer_plot <- menz_plot(data = killer_data, model = killer_models, color = color_matching$color_code[grep("Killer ", color_matching$species)])
sperm_plot <- menz_plot(data = sperm_data, model = sperm_models, intervals = TRUE, color = color_matching$color_code[grep("Sperm ", color_matching$species)])
bowhead_plot <- menz_plot(data = bowhead_data, model = bowhead_models, intervals = TRUE, color = color_matching$color_code[grep("Bowhead ", color_matching$species)])
right_plot <- menz_plot(data = right_data, model = right_models, color = color_matching$color_code[grep("Right ", color_matching$species)])
narrow_plot <- menz_plot(data = narrow_data, model = narrow_models, intervals = TRUE, color = color_matching$color_code[grep(" Porpoise", color_matching$species)])
rissos_plot <- menz_plot(data = rissos_data, model = rissos_models, intervals = TRUE, color = color_matching$color_code[grep("Risso's ", color_matching$species)])
bottlenose_plot <- menz_plot(data = bottlenose_data, model = bottlenose_models, intervals = TRUE, color = color_matching$color_code[grep("Bottlenose ", color_matching$species)])
heavisides_plot <- menz_plot(data = heavisides_data, model = heavisides_models, intervals = TRUE, color = color_matching$color_code[grep("Heaviside's ", color_matching$species)])
commersons_plot <- menz_plot(data = commersons_data, model = commersons_models, intervals = TRUE, color = color_matching$color_code[grep("Commerson's ", color_matching$species)])
peales_plot <- menz_plot(data = peales_data, model = peales_models, intervals = TRUE, color = color_matching$color_code[grep("Peale's ", color_matching$species)])
hectors_plot <- menz_plot(data = hectors_data, model = hectors_models, intervals = TRUE, color = color_matching$color_code[grep("Hector's ", color_matching$species)])
sei_plot <- menz_plot(data = sei_data, model = sei_models, color = color_matching$color_code[grep("Sei ", color_matching$species)])
#create and save full phylogeny plot for mysticetes
png("plots/myst_phylo.png", width = 6, height = nrow(myst_tips), units = "in", res = 600)
#cairo_pdf("plots/myst_phylo.pdf", width = 6, height = 10, family = "avenir")
right_panel <- cowplot::plot_grid(humpback_plot, fin_plot, blue_plot, sei_plot, minke_plot, right_plot, bowhead_plot, NULL,
ncol = 1, rel_heights = c(rep(1, nrow(myst_tips)), 0.35))
bottom_row <- cowplot::plot_grid(myst_phylo_plot, right_panel, rel_widths = c(1, 1))
bottom_row
dev.off()
#create and save full phylogeny plot for odontocetes
png("plots/odon_phylo.png", width = 6, height = nrow(odon_tips), units = "in", res = 600)
#cairo_pdf("plots/odon_phylo.pdf", width = 6, height = 10, family = "avenir")
right_panel <- cowplot::plot_grid(hectors_plot, commersons_plot, heavisides_plot, rissos_plot, bottlenose_plot, peales_plot, killer_plot, narrow_plot, sperm_plot, NULL,
ncol = 1, rel_heights = c(rep(1, nrow(odon_tips)), 0.35))
bottom_row <- cowplot::plot_grid(odon_phylo_plot, right_panel, rel_widths = c(1, 1))
bottom_row
dev.off()
#get labels for plotting
human_dataset_labels <- list.files("data/doreco/")
human_dataset_labels <- substr(human_dataset_labels[grep("doreco", human_dataset_labels)], 1, 15)
human_dataset_labels <- as.character(sapply(human_dataset_labels, function(x){gsub(" DoReCo dataset.*", "", gsub("^The ", "", readLines(paste0("data/doreco/", x, "_extended/", x, "_dataset-info.txt")[1])[1]))}))
#extract effects for phonemes in words
phonemes_in_words_effects <- lapply(phonemes_in_words, extract_freq_effects)
#reformat words data in a format that is plottable
phonemes_in_words_plot_data <- data.frame(cbind(do.call(rbind, lapply(phonemes_in_words_effects, function(x){x$length})), do.call(rbind, lapply(phonemes_in_words_effects, function(x){x$position}))))
colnames(phonemes_in_words_plot_data) <- c("length_lower", "length_median", "length_upper", "position_lower", "position_median", "position_upper")
phonemes_in_words_plot_data$label <- human_dataset_labels
phonemes_in_words_plot_data <- phonemes_in_words_plot_data[order(phonemes_in_words_plot_data$length_median, decreasing = TRUE), ]
phonemes_in_words_plot_data$label[which(phonemes_in_words_plot_data$label == "Nǁng")] <- "Nllng" #special characters
#compute effects for whale data
whales_effects <- lapply(list(sperm_models, humpback_models, fin_models, killer_models, blue_models, minke_models, bowhead_models, right_models, narrow_models, heavisides_models, commersons_models, peales_models, hectors_models, rissos_models, bottlenose_models, sei_models), extract_freq_effects)
#reformat whale data in a format that is plottable
whales_plot_data <- data.frame(cbind(do.call(rbind, lapply(whales_effects, function(x){x$length})), do.call(rbind, lapply(whales_effects, function(x){x$position}))))
colnames(whales_plot_data) <- c("length_lower", "length_median", "length_upper", "position_lower", "position_median", "position_upper")
whales_plot_data$label <- c("Sperm Whale", "Humpback Whale", "Fin Whale", "Killer Whale", "Blue Whale", "Common Minke Whale", "Bowhead Whale", "North Pacific Right Whale", "Narrow-Ridged Finless Porpoise", "Heaviside's Dolphin", "Commerson's Dolphin", "Peale's Dolphin", "Hector's Dolphin", "Risso's Dolphin", "Bottlenose Dolphin", "Sei Whale")
whales_plot_data <- whales_plot_data[order(whales_plot_data$length_median, decreasing = TRUE), ]
#reorder everything for a single axis
whales_plot_data$x <- 1:nrow(whales_plot_data)
whales_plot_data$group <- 1
phonemes_in_words_plot_data$x <- (max(whales_plot_data$x)+1):(max(whales_plot_data$x)+nrow(phonemes_in_words_plot_data))
phonemes_in_words_plot_data$group <- 2
#combine whale data with word data
combined_words_plot_data <- rbind(phonemes_in_words_plot_data, whales_plot_data)
#generate plot of phonemes in words against whales, for length
combined_words_length_plot <- ggplot(combined_words_plot_data) +
geom_linerange(aes(x = x, ymin = length_lower, ymax = length_upper, color = factor(group))) +
geom_hline(aes(yintercept = 0), lty = "dashed") +
geom_vline(aes(xintercept = nrow(whales_plot_data) + 0.5), lty = "dotted") +
scale_y_continuous(limits = c(min(combined_words_plot_data$length_lower)*1.05, max(combined_words_plot_data$length_upper)*1.05),
#name = expression("95% CI for "~italic("b")~"(Strength of Menzerath's Law)")) +
name = "Effect of Length on Duration") +
scale_x_continuous(breaks = combined_words_plot_data$x, labels = combined_words_plot_data$label, name = NULL, limits = c(0, nrow(combined_words_plot_data) + 1), expand = c(0, 0)) +
scale_color_manual(values = c("#638ccc", "#ca5670"), labels = c("Whales", "Humans"), name = "Taxa") +
theme_linedraw(base_size = 8, base_family = "Avenir") + theme(axis.text.x = element_text(angle = 90, hjust = 0.99, vjust = 0.5), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
#generate plot of phonemes in words against whales, for position
combined_words_position_plot <- ggplot(combined_words_plot_data) +
geom_linerange(aes(x = x, ymin = position_lower, ymax = position_upper, color = factor(group))) +
geom_hline(aes(yintercept = 0), lty = "dashed") +
geom_vline(aes(xintercept = nrow(whales_plot_data) + 0.5), lty = "dotted") +
scale_y_continuous(limits = c(min(combined_words_plot_data$position_lower)*1.05, max(combined_words_plot_data$position_upper)*1.05),
#name = expression("95% CI for "~italic("b")~"(Strength of Menzerath's Law)")) +
name = "Effect of Position on Duration") +
scale_x_continuous(breaks = combined_words_plot_data$x, labels = combined_words_plot_data$label, name = NULL, limits = c(0, nrow(combined_words_plot_data) + 1), expand = c(0, 0)) +
scale_color_manual(values = c("#638ccc", "#ca5670"), labels = c("Whales", "Humans"), name = "Taxa") +
theme_linedraw(base_size = 8, base_family = "Avenir") + theme(axis.text.x = element_text(angle = 90, hjust = 0.99, vjust = 0.5), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
#export plot of phonemes in words
png("plots/word_level_effects.png", width = 8, height = 6, units = "in", res = 600)
cowplot::plot_grid(cowplot::plot_grid(combined_words_length_plot + theme(axis.text.x = element_blank(), legend.position = "none"), combined_words_position_plot + theme(legend.position = "none"), ncol = 1, align = "v", rel_heights = c(0.66, 1)), cowplot::get_legend(combined_words_length_plot), nrow = 1, rel_widths = c(1, 0.12))
dev.off()
# #export plot of phonemes in words
# png("plots/word_level_effects.png", width = 8, height = 4, units = "in", res = 600)
# #cairo_pdf("plots/effects.pdf", width = 8, height = 4, family = "avenir")
# combined_words_plot
# dev.off()
#get z-scored durations
durations <- c(scale(blue_data$duration), scale(bowhead_data$duration), scale(humpback_data$duration), scale(right_data$duration), scale(sei_data$duration), scale(killer_data$duration))
#get z-scored durations
durations <- c(scale(blue_data$duration), scale(bowhead_data$duration), scale(humpback_data$duration), scale(right_data$duration), scale(sei_data$cerchio_2022$duration), scale(sei_data$macklin_2024$duration), scale(killer_data$duration))
#get z-scored intervals
intervals <- c(scale(fin_data$wood_2022$duration), scale(fin_data$best_2022$duration), scale(fin_data$romagosa_2024$duration), scale(minke_data$duration), scale(bottlenose_data$duration), scale(commersons_data$duration), scale(heavisides_data$duration), scale(hectors_data$duration), scale(narrow_data$duration), scale(peales_data$duration), scale(rissos_data$duration), scale(sperm_data$gero_2016), scale(sperm_data$hersh_2022), scale(sperm_data$vachon_2022))
#get densities
durations_density <- density(durations, adjust = 4, n = 1000)
intervals_density <- density(intervals, adjust = 4, n = 1000)
#combine for plotting
plot_data <- data.frame(x = c(durations_density$x, intervals_density$x), y = c(durations_density$y, intervals_density$y), Type = rep(c("Durations", "Intervals"), each = 1000))
#plot and save
png("plots/density.png", width = 4, height = 3, units = "in", res = 600)
ggplot(plot_data, aes(x = x, y = y, color = Type)) +
geom_line() +
ylab("Density") +
scale_x_continuous(name = "z-Scored Measure", limits = c(-2.5, 5)) +
scale_color_manual(values = c("#638ccc", "#ca5670")) +
theme_linedraw(base_size = 8, base_family = "Avenir")
dev.off()
#get z-scored durations
durations <- c(scale(blue_data$duration), scale(bowhead_data$duration), scale(humpback_data$duration), scale(right_data$duration), scale(sei_data$cerchio_2022$duration), scale(sei_data$macklin_2024$duration), scale(killer_data$duration))
#get z-scored intervals
intervals <- c(scale(fin_data$wood_2022$duration), scale(fin_data$best_2022$duration), scale(fin_data$romagosa_2024$duration), scale(minke_data$duration), scale(bottlenose_data$duration), scale(commersons_data$duration), scale(heavisides_data$duration), scale(hectors_data$duration), scale(narrow_data$duration), scale(peales_data$duration), scale(rissos_data$duration), scale(sperm_data$gero_2016), scale(sperm_data$hersh_2022), scale(sperm_data$vachon_2022))
#get densities
durations_density <- density(durations, adjust = 4, n = 1000)
intervals_density <- density(intervals, adjust = 4, n = 1000)
#combine for plotting
plot_data <- data.frame(x = c(durations_density$x, intervals_density$x), y = c(durations_density$y, intervals_density$y), Type = rep(c("Durations", "Intervals"), each = 1000))
#plot and save
png("../plots/density.png", width = 4, height = 3, units = "in", res = 600)
ggplot(plot_data, aes(x = x, y = y, color = Type)) +
geom_line() +
ylab("Density") +
scale_x_continuous(name = "z-Scored Measure", limits = c(-2.5, 5)) +
scale_color_manual(values = c("#638ccc", "#ca5670")) +
theme_linedraw(base_size = 8, base_family = "Avenir")
dev.off()
#load packages and data
library(flextable)
library(dplyr)
load("../tables/whale_tables.RData")
#print table
flextable(whale_tables$length[-1, ]) %>%
delete_part(part = "header") %>%
add_header_row(values = whale_tables$length[1, ]) %>%
theme_vanilla() %>%
merge_at(1:6, 1) %>% merge_at(7:15, 1) %>%
set_table_properties(layout = "autofit") %>%
set_caption("The effect of sequence length on element/interval duration for each whale species, computed from the base model that excludes position. 2.5% and 97.5% denote the lower and upper bounds of the 95% confidence intervals.")
#load packages and data
library(flextable)
library(dplyr)
load("../tables/whale_tables.RData")
#print table
flextable(whale_tables$length[-1, ]) %>%
delete_part(part = "header") %>%
add_header_row(values = whale_tables$length[1, ]) %>%
theme_vanilla() %>%
merge_at(1:6, 1) %>% merge_at(7:15, 1) %>%
set_table_properties(layout = "autofit") %>%
set_caption("The effect of sequence length on element/interval duration for each whale species, computed from the base model that excludes position. 2.5% and 97.5% denote the lower and upper bounds of the 95% confidence intervals.")
#get labels for plotting
human_dataset_labels <- list.files("../data/doreco/")
human_dataset_labels <- substr(human_dataset_labels[grep("doreco", human_dataset_labels)], 1, 15)
human_dataset_labels <- as.character(sapply(human_dataset_labels, function(x){gsub(" DoReCo dataset.*", "", gsub("^The ", "", readLines(paste0("../data/doreco/", x, "_extended/", x, "_dataset-info.txt")[1])[1]))}))
#extract effects for words in sentences
words_in_sentences_effects <- lapply(words_in_sentences, extract_freq_effects)
#reformat sentences data in a format that is plottable
words_in_sentences_plot_data <- data.frame(cbind(do.call(rbind, lapply(words_in_sentences_effects, function(x){x$length})), do.call(rbind, lapply(words_in_sentences_effects, function(x){x$position}))))
colnames(words_in_sentences_plot_data) <- c("length_lower", "length_median", "length_upper", "position_lower", "position_median", "position_upper")
words_in_sentences_plot_data$label <- human_dataset_labels
words_in_sentences_plot_data <- words_in_sentences_plot_data[order(words_in_sentences_plot_data$length_median, decreasing = TRUE), ]
words_in_sentences_plot_data$label[which(words_in_sentences_plot_data$label == "Nǁng")] <- "Nllng" #special characters
#compute effects for whale data
whales_effects <- lapply(list(sperm_models, humpback_models, fin_models, killer_models, blue_models, minke_models, bowhead_models, right_models, narrow_models, heavisides_models, commersons_models, peales_models, hectors_models, rissos_models, bottlenose_models, sei_models), extract_freq_effects)
#reformat whale data in a format that is plottable
whales_plot_data <- data.frame(cbind(do.call(rbind, lapply(whales_effects, function(x){x$length})), do.call(rbind, lapply(whales_effects, function(x){x$position}))))
colnames(whales_plot_data) <- c("length_lower", "length_median", "length_upper", "position_lower", "position_median", "position_upper")
whales_plot_data$label <- c("Sperm Whale", "Humpback Whale", "Fin Whale", "Killer Whale", "Blue Whale", "Common Minke Whale", "Bowhead Whale", "North Pacific Right Whale", "Narrow-Ridged Finless Porpoise", "Heaviside's Dolphin", "Commerson's Dolphin", "Peale's Dolphin", "Hector's Dolphin", "Risso's Dolphin", "Bottlenose Dolphin", "Sei Whale")
whales_plot_data <- whales_plot_data[order(whales_plot_data$length_median, decreasing = TRUE), ]
#reorder everything for a single axis
whales_plot_data$x <- 1:nrow(whales_plot_data)
whales_plot_data$group <- 1
words_in_sentences_plot_data$x <- (max(whales_plot_data$x)+1):(max(whales_plot_data$x)+nrow(words_in_sentences_plot_data))
words_in_sentences_plot_data$group <- 2
#combine whale data with sentence data
combined_sentences_plot_data <- rbind(words_in_sentences_plot_data, whales_plot_data)
#generate plot of phonemes in sentences against whales, for length
combined_sentences_length_plot <- ggplot(combined_sentences_plot_data) +
geom_linerange(aes(x = x, ymin = length_lower, ymax = length_upper, color = factor(group))) +
geom_hline(aes(yintercept = 0), lty = "dashed") +
geom_vline(aes(xintercept = nrow(whales_plot_data) + 0.5), lty = "dotted") +
scale_y_continuous(limits = c(min(combined_sentences_plot_data$length_lower)*1.05, max(combined_sentences_plot_data$length_upper)*1.05),
#name = expression("95% CI for "~italic("b")~"(Strength of Menzerath's Law)")) +
name = "Effect of Length on Duration") +
scale_x_continuous(breaks = combined_sentences_plot_data$x, labels = combined_sentences_plot_data$label, name = NULL, limits = c(0, nrow(combined_sentences_plot_data) + 1), expand = c(0, 0)) +
scale_color_manual(values = c("#638ccc", "#ca5670"), labels = c("Whales", "Humans"), name = "Taxa") +
theme_linedraw(base_size = 8, base_family = "Avenir") + theme(axis.text.x = element_text(angle = 90, hjust = 0.99, vjust = 0.5), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
#generate plot of words in sentences against whales, for position
combined_sentences_position_plot <- ggplot(combined_sentences_plot_data) +
geom_linerange(aes(x = x, ymin = position_lower, ymax = position_upper, color = factor(group))) +
geom_hline(aes(yintercept = 0), lty = "dashed") +
geom_vline(aes(xintercept = nrow(whales_plot_data) + 0.5), lty = "dotted") +
scale_y_continuous(limits = c(min(combined_sentences_plot_data$position_lower)*1.05, max(combined_sentences_plot_data$position_upper)*1.05),
#name = expression("95% CI for "~italic("b")~"(Strength of Menzerath's Law)")) +
name = "Effect of Position on Duration") +
scale_x_continuous(breaks = combined_sentences_plot_data$x, labels = combined_sentences_plot_data$label, name = NULL, limits = c(0, nrow(combined_sentences_plot_data) + 1), expand = c(0, 0)) +
scale_color_manual(values = c("#638ccc", "#ca5670"), labels = c("Whales", "Humans"), name = "Taxa") +
theme_linedraw(base_size = 8, base_family = "Avenir") + theme(axis.text.x = element_text(angle = 90, hjust = 0.99, vjust = 0.5), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
#export plot of words in sentences
png("../plots/sentence_level_effects.png", width = 8, height = 6, units = "in", res = 600)
cowplot::plot_grid(cowplot::plot_grid(combined_sentences_length_plot + theme(axis.text.x = element_blank(), legend.position = "none"), combined_sentences_position_plot + theme(legend.position = "none"), ncol = 1, align = "v", rel_heights = c(0.66, 1)), cowplot::get_legend(combined_sentences_length_plot), nrow = 1, rel_widths = c(1, 0.12))
dev.off()
# #export plot of words in sentences
# png("../plots/sentence_level_effects.png", width = 8, height = 4, units = "in", res = 600)
# #cairo_pdf("../plots/effects.pdf", width = 8, height = 4, family = "avenir")
# combined_sentences_plot
# dev.off()
#get labels for plotting
human_dataset_labels <- list.files("../data/doreco/")
human_dataset_labels <- substr(human_dataset_labels[grep("doreco", human_dataset_labels)], 1, 15)
human_dataset_labels <- as.character(sapply(human_dataset_labels, function(x){gsub(" DoReCo dataset.*", "", gsub("^The ", "", readLines(paste0("../data/doreco/", x, "_extended/", x, "_dataset-info.txt")[1])[1]))}))
#extract effects for phonemes in words
phonemes_in_words_effects <- lapply(phonemes_in_words, extract_freq_effects)
#reformat words data in a format that is plottable
phonemes_in_words_plot_data <- data.frame(do.call(rbind, lapply(phonemes_in_words_effects, function(x){x$length})), do.call(rbind, lapply(phonemes_in_words_effects, function(x){x$prod_null})))
colnames(phonemes_in_words_plot_data) <- c("length_lower", "length_median", "length_upper", "null_lower", "null_median", "null_upper")
phonemes_in_words_plot_data$label <- human_dataset_labels
phonemes_in_words_plot_data <- phonemes_in_words_plot_data[order(phonemes_in_words_plot_data$length_median, decreasing = TRUE), ]
phonemes_in_words_plot_data$label[which(phonemes_in_words_plot_data$label == "Nǁng")] <- "Nllng" #special characters
#compute effects for whale data
whales_effects <- lapply(list(sperm_models, humpback_models, fin_models, killer_models, blue_models, minke_models, bowhead_models, right_models, narrow_models, heavisides_models, commersons_models, peales_models, hectors_models, rissos_models, bottlenose_models, sei_models), extract_freq_effects)
#reformat whale data in a format that is plottable
whales_plot_data <- data.frame(cbind(do.call(rbind, lapply(whales_effects, function(x){x$length})), do.call(rbind, lapply(whales_effects, function(x){x$prod_null}))))
colnames(whales_plot_data) <- c("length_lower", "length_median", "length_upper", "null_lower", "null_median", "null_upper")
whales_plot_data$label <- c("Sperm Whale", "Humpback Whale", "Fin Whale", "Killer Whale", "Blue Whale", "Common Minke Whale", "Bowhead Whale", "North Pacific Right Whale", "Narrow-Ridged Finless Porpoise", "Heaviside's Dolphin", "Commerson's Dolphin", "Peale's Dolphin", "Hector's Dolphin", "Risso's Dolphin", "Bottlenose Dolphin", "Sei Whale")
whales_plot_data <- whales_plot_data[order(whales_plot_data$length_median, decreasing = TRUE), ]
#reorder everything for a single axis
whales_plot_data$x <- 1:nrow(whales_plot_data)
whales_plot_data$group <- 1
phonemes_in_words_plot_data$x <- (max(whales_plot_data$x)+1):(max(whales_plot_data$x)+nrow(phonemes_in_words_plot_data))
phonemes_in_words_plot_data$group <- 2
#combine whale data with word data
combined_words_plot_data <- rbind(phonemes_in_words_plot_data, whales_plot_data)
#generate plot of phonemes in words against whales, for length
#export plot of phonemes in sentences
png("../plots/word_level_effects_null.png", width = 8, height = 4.5, units = "in", res = 600)
ggplot(combined_words_plot_data) +
geom_linerange(aes(x = x, ymin = null_lower, ymax = null_upper, color = factor(group))) +
geom_point(aes(x = x, y = length_median, color = factor(group))) +
geom_hline(aes(yintercept = 0), lty = "dashed") +
geom_vline(aes(xintercept = nrow(whales_plot_data) + 0.5), lty = "dotted") +
scale_y_continuous(limits = c(min(combined_words_plot_data$length_lower)*1.05, max(combined_words_plot_data$length_upper)*1.05),
#name = expression("95% CI for "~italic("b")~"(Strength of Menzerath's Law)")) +
name = "Effect of Length on Duration") +
scale_x_continuous(breaks = combined_words_plot_data$x, labels = combined_words_plot_data$label, name = NULL, limits = c(0, nrow(combined_words_plot_data) + 1), expand = c(0, 0)) +
scale_color_manual(values = c("#638ccc", "#ca5670"), labels = c("Whales", "Humans"), name = "Taxa") +
theme_linedraw(base_size = 8, base_family = "Avenir") + theme(axis.text.x = element_text(angle = 90, hjust = 0.99, vjust = 0.5), panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank())
dev.off()
datasets <- readxl::read_xlsx("data/datasets.xlsx")
#load libraries
library(flextable)
library(dplyr)
library(ftExtra)
library(officer)
#store data to print
table_data <- datasets[which(datasets$Used == "Yes"), c(5, 6, 7, 8, 1, 10, 11)]
#order by group and then by species
table_data <- table_data[with(table_data, order(Group, Species)), ]
#restructure references
table_data$Zotero <- paste0(table_data$Dataset, paste0(" [@", table_data$Zotero, "]"))
colnames(table_data)[which(colnames(table_data) == "Zotero")] <- "Source"
table_data <- table_data[, -which(colnames(table_data) == "Dataset")]
#print table
flex_table <- flextable(table_data) %>%
merge_v(j = 1) %>% merge_v(j = 2) %>%
theme_vanilla() %>% set_table_properties(layout = "autofit") %>%
set_caption("The datasets included in this analysis, with whether they are open access, the vocalization category, and whether the sequences are comprised of element durations or inter-element intervals.", autonum = run_autonum(seq_id = "tab", bkm = "table-datasets")) %>%
colformat_md()
flex_table
car::vif(killer_models$actual$full)
